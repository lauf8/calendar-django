version: '3.7'

volumes:
  data:
  rabbitmq:

services:
  db:
    image: postgres:12
    volumes:
      - data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  web:
    build:
      context: .
      dockerfile: Dockerfile
      # target: ${TARGET}
    command: >
      bash -c "python manage.py migrate --noinput && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/code
    ports:
      - "8000:8000"
      # - "5432:5432"
    depends_on:
      - db
      - rabbitmq
    environment:
      DJANGO_SETTINGS_MODULE: 'config.settings'

  rabbitmq:
    image: rabbitmq:3.8
    ports:
      - "15672:15672"
      - "5462:5462"
    volumes:
      - rabbitmq:/var/lib/rabbitmq
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    command: rabbitmq-server
    restart: on-failure

  celery_celery:
    build:
      context: .
      # target: ${TARGET}
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "celery", "-A", "config", "worker", "-Q", "celery",
              "-l", "DEBUG", "-n", "EcoreCeleryWorker", "-c", "5"]
    volumes:
      - .:/code
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  celery_call:
    build:
      context: .
      # target: ${TARGET}
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "celery", "-A", "config", "worker", "-Q", "call",
              "-l", "DEBUG", "-n", "EcoreCallWorker", "-c", "5"]
    volumes:
      - .:/code
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  celery_chatgpt:
    build:
      context: .
      # target: ${TARGET}
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "celery", "-A", "config", "worker", "-Q", "chatgpt",
              "-l", "DEBUG", "-n", "EcoreChatGptWorker", "-c", "5"]
    volumes:
      - .:/code
    depends_on:
      - db
      - rabbitmq
    restart: on-failure
    celery_research:
    build:
      context: .
      # target: ${TARGET}
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "celery", "-A", "config", "worker", "-Q", "research",
              "-l", "DEBUG", "-n", "EcoreResearchWorker", "-c", "5"]
    volumes:
      - .:/code
    depends_on:
      - db
      - rabbitmq
    restart: on-failure

  celery_beat:
    build:
      context: .
      # target: ${TARGET}
    command: ["./wait-for-it.sh", "rabbitmq:5672", "--", "celery", "-A", "config", "beat",
              "-l", "DEBUG",
              "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler",
              "--pidfile", "/tmp/celeryd.pid"]
    volumes:
      - .:/code
    depends_on:
      - db
      - rabbitmq
    restart: on-failure